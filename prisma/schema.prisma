generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Bot {
  id    BigInt @id @default(autoincrement())
  name  String @unique @db.VarChar
  users User[]
}

model User {
  id                        BigInt                 @id @default(autoincrement())
  botId                     BigInt
  chatId                    BigInt
  createdAt                 DateTime               @default(now())
  bot                       Bot                    @relation(fields: [botId], references: [id])
  rialTunnelBotEuroPartners RialTunnelBotPartner[] @relation(name: "rialTunnelBotEuroPartners")
  rialTunnelBotRialPartners RialTunnelBotPartner[] @relation(name: "rialTunnelBotRialPartners")
  rialTunnelBotUsers        RialTunnelBotUser[]
}

model RialTunnelBotPartner {
  id                      BigInt   @id @default(autoincrement())
  uuid                    String   @unique @default(uuid()) @db.VarChar
  userEuroId              BigInt
  userRialId              BigInt?
  amount                  Int?
  userEuroBankAccountData String?  @db.VarChar
  userRialBankAccountData String?  @db.VarChar
  euroReceived            Boolean  @default(false)
  createdAt               DateTime @default(now())
  updatedAt               DateTime @default(now()) @updatedAt
  userEuro                User     @relation(fields: [userEuroId], references: [id], name: "rialTunnelBotEuroPartners")
  userRial                User?    @relation(fields: [userRialId], references: [id], name: "rialTunnelBotRialPartners")
}

model RialTunnelBotUser {
  id      BigInt  @id @default(autoincrement())
  userId  BigInt
  context String? @db.VarChar
  user    User    @relation(fields: [userId], references: [id])
}
